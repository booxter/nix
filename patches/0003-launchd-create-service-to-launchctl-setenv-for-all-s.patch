From 2948f498b6d8b67457cf69a88c68ee8a47182387 Mon Sep 17 00:00:00 2001
From: Ihar Hrachyshka <ihar.hrachyshka@gmail.com>
Date: Thu, 5 Sep 2024 21:01:13 -0400
Subject: [PATCH 3/5] launchd: create service to launchctl setenv for all
 sessionVariables

This allows to have consistent environment for both (gui) apps started
by launchd and shell programs.

Closes: https://github.com/LnL7/nix-darwin/issues/1056
Signed-off-by: Ihar Hrachyshka <ihar.hrachyshka@gmail.com>
---
 modules/launchd/default.nix | 23 +++++++++++++++++++++++
 nix-darwin/default.nix      | 34 ++++++++++++++++++----------------
 2 files changed, 41 insertions(+), 16 deletions(-)

diff --git a/modules/launchd/default.nix b/modules/launchd/default.nix
index 6a9c44ef..e513b383 100644
--- a/modules/launchd/default.nix
+++ b/modules/launchd/default.nix
@@ -209,5 +209,28 @@ in {
           setupLaunchAgents
         '';
     })
+
+    (mkIf isDarwin
+      (let
+        setenv-script = pkgs.writeShellScript "launchctl-setenv" (concatStringsSep "\n"
+          (mapAttrsToList (name: val: "/bin/launchctl setenv ${name} ${toString val}") config.home.sessionVariables));
+        launchctl-setenv = pkgs.stdenv.mkDerivation {
+          name = "setup-script";
+          buildCommand = ''
+            mkdir -p $out/bin
+            cp ${setenv-script} $out/bin/launchctl-setenv
+          '';
+        };
+      in {
+        launchd.agents.launchctl-setenv = {
+          enable = true;
+          config = {
+            ProgramArguments = [ "${launchctl-setenv}/bin/launchctl-setenv" ];
+            KeepAlive.SuccessfulExit = false;
+            RunAtLoad = true;
+          };
+        };
+      })
+    )
   ];
 }
diff --git a/nix-darwin/default.nix b/nix-darwin/default.nix
index 018e9bab..cc93be4c 100644
--- a/nix-darwin/default.nix
+++ b/nix-darwin/default.nix
@@ -11,21 +11,23 @@ in {
 
   config = mkMerge [
     { home-manager.extraSpecialArgs.darwinConfig = config; }
-    (mkIf (cfg.users != { }) {
-      system.activationScripts.postActivation.text = concatStringsSep "\n"
-        (mapAttrsToList (username: usercfg: ''
-          echo Activating home-manager configuration for ${username}
-          sudo -u ${username} --set-home ${
-            pkgs.writeShellScript "activation-${username}" ''
-              ${lib.optionalString (cfg.backupFileExtension != null)
-              "export HOME_MANAGER_BACKUP_EXT=${
-                lib.escapeShellArg cfg.backupFileExtension
-              }"}
-              ${lib.optionalString cfg.verbose "export VERBOSE=1"}
-              exec ${usercfg.home.activationPackage}/activate
-            ''
-          }
-        '') cfg.users);
-    })
+    (mkIf (cfg.users != { }) (mkMerge [
+      {
+        system.activationScripts.postActivation.text = concatStringsSep "\n"
+          (mapAttrsToList (username: usercfg: ''
+            echo Activating home-manager configuration for ${username}
+            sudo -u ${username} --set-home ${
+              pkgs.writeShellScript "activation-${username}" ''
+                ${lib.optionalString (cfg.backupFileExtension != null)
+                "export HOME_MANAGER_BACKUP_EXT=${
+                  lib.escapeShellArg cfg.backupFileExtension
+                }"}
+                ${lib.optionalString cfg.verbose "export VERBOSE=1"}
+                exec ${usercfg.home.activationPackage}/activate
+              ''
+            }
+          '') cfg.users);
+      }
+    ]))
   ];
 }
-- 
2.46.0

